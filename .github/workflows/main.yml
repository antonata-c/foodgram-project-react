name: Main foodgram workflow

on: push

jobs:
  backend_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: django-user
          POSTGRES_PASSWORD: django-password
          POSTGRES_DB: django
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8==6.0.0 flake8-isort==6.0.0
        pip install -r ./backend/requirements.txt
    - name: Test with flake8
      env:
        POSTGRES_USER: django-user
        POSTGRES_PASSWORD: django-password
        POSTGRES_DB: django
        DB_NAME: db
        DB_PORT: 5432
      run: |
        python -m flake8 backend/
        cd backend/

  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags:  ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest

  build_frontend_and_push_to_docker_hub:
    name: Push frontend Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags:  ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Executing ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd foodgram-project-react/infra
          sudo docker compose -f docker-compose.production.yml down
          sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/foodgram-backend
          sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend
          sudo docker image rm nginx:1.19.3
          sudo docker image rm postgres:13
          sudo docker compose -f docker-compose.production.yml pull
          sudo docker compose -f docker-compose.production.yml up -d
          sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
          sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic --noinput

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send telegram message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Деплой kittygram успешно выполнен
          Выполнил деплой: ${{ github.actor }}
          Сообщение коммита: ${{ github.event.commits[0].message }}
          Ссылка на коммит: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
